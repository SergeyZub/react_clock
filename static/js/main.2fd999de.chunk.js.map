{"version":3,"sources":["Clock.jsx","App.js","index.js"],"names":["Clock","props","tick","setState","date","Date","console","log","state","toLocaleTimeString","this","timerID","setInterval","prevProps","name","clearInterval","React","Component","App","isClockVisible","clockName","showClock","hideClock","setRandomName","Math","random","className","onClick","type","ReactDOM","render","document","getElementById"],"mappings":"uMAgDeA,G,wDA5Cb,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IAqBRC,KAAO,WACL,EAAKC,SAAS,CACZC,KAAM,IAAIC,OAIZC,QAAQC,IAAI,EAAKC,MAAMJ,KAAKK,uBA1B5B,EAAKD,MAAQ,CACXJ,KAAM,IAAIC,MAHK,E,qDAOnB,WAAqB,IAAD,OAClBK,KAAKC,QAAUC,aAAY,kBAAM,EAAKV,SAAQ,O,gCAGhD,SAAmBW,GACbA,EAAUC,OAASJ,KAAKT,MAAMa,MAEhCR,QAAQC,IAAR,qCAA0CM,EAAUC,KAApD,eAA+DJ,KAAKT,MAAMa,S,kCAI9E,WACEC,cAAcL,KAAKC,W,oBAYrB,WACE,OACE,oCACGD,KAAKF,MAAMJ,KAAKK,0B,GAnCLO,IAAMC,YCuDXC,E,4MApDbV,MAAQ,CACNW,gBAAgB,EAChBC,UAAW,S,EAGbC,UAAY,WACV,EAAKlB,SAAS,CACZgB,gBAAgB,K,EAIpBG,UAAY,WACV,EAAKnB,SAAS,CACZgB,gBAAgB,K,EAIpBI,cAAgB,WACd,EAAKpB,SAAS,CACZiB,UAAU,GAAD,OAAKI,KAAKC,a,4CAIvB,WACE,OACE,oCACE,yBAAKC,UAAU,OACb,2CACA,2CAEG,IACAhB,KAAKF,MAAMW,gBAAkB,kBAAC,EAAD,CAAOL,KAAMJ,KAAKF,MAAMY,aAExD,6BACE,4BAAQO,QAASjB,KAAKW,UAAWO,KAAK,UAAtC,cAIA,4BAAQD,QAASjB,KAAKY,UAAWM,KAAK,UAAtC,cAIA,4BAAQD,QAASjB,KAAKa,cAAeK,KAAK,UAA1C,0B,GA3CMZ,IAAMC,WCDxBY,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,U","file":"static/js/main.2fd999de.chunk.js","sourcesContent":["import React from 'react';\nimport { string } from 'prop-types';\n\nclass Clock extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      date: new Date(),\n    };\n  }\n\n  componentDidMount() {\n    this.timerID = setInterval(() => this.tick(), 1000);\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.name !== this.props.name) {\n      // eslint-disable-next-line\n      console.log(`The Clock was renamed from ${prevProps.name} to ${this.props.name}`)\n    }\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.timerID);\n  }\n\n  tick = () => {\n    this.setState({\n      date: new Date(),\n    });\n\n    // eslint-disable-next-line\n    console.log(this.state.date.toLocaleTimeString());\n  }\n\n  render() {\n    return (\n      <>\n        {this.state.date.toLocaleTimeString()}\n      </>\n    );\n  }\n}\n\nClock.propTypes = {\n  name: string.isRequired,\n};\n\nexport default Clock;\n","import React from 'react';\n\nimport './App.scss';\nimport Clock from './Clock';\n\nclass App extends React.Component {\n  state = {\n    isClockVisible: true,\n    clockName: 'clock',\n  };\n\n  showClock = () => {\n    this.setState({\n      isClockVisible: true,\n    });\n  }\n\n  hideClock = () => {\n    this.setState({\n      isClockVisible: false,\n    });\n  }\n\n  setRandomName = () => {\n    this.setState({\n      clockName: `${Math.random()}`,\n    });\n  }\n\n  render() {\n    return (\n      <>\n        <div className=\"App\">\n          <h1>React clock</h1>\n          <p>\n            Current time:\n            {' '}\n            {this.state.isClockVisible && <Clock name={this.state.clockName} />}\n          </p>\n          <div>\n            <button onClick={this.showClock} type=\"button\">\n              Show Clock\n            </button>\n\n            <button onClick={this.hideClock} type=\"button\">\n              Hide Clock\n            </button>\n\n            <button onClick={this.setRandomName} type=\"button\">\n              Set random name\n            </button>\n          </div>\n        </div>\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}