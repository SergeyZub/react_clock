{"version":3,"sources":["App.js","index.js"],"names":["App","props","timerID","startClock","setInterval","tick","console","log","state","date","toLocaleTimeString","stopClock","clearInterval","setState","Date","showClock","isClockVisible","hideClock","setRandomName","oldName","clockName","Math","random","this","className","onClick","type","React","Component","ReactDOM","render","document","getElementById"],"mappings":"uMAmGeA,G,wDA5Fb,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IAHRC,QAAU,KAES,EAiBnBC,WAAa,WACU,OAAjB,EAAKD,UACP,EAAKA,QAAUE,aAAY,WACzB,EAAKC,OAGLC,QAAQC,IAAI,EAAKC,MAAMC,KAAKC,wBAC3B,OAxBY,EA4BnBC,UAAY,WACVC,cAAc,EAAKV,SACnB,EAAKA,QAAU,MA9BE,EAiCnBG,KAAO,WACL,EAAKQ,SAAS,CACZJ,KAAM,IAAIK,QAnCK,EAuCnBC,UAAY,WACV,EAAKZ,aACL,EAAKU,SAAS,CACZG,gBAAgB,KA1CD,EA8CnBC,UAAY,WACV,EAAKN,YACL,EAAKE,SAAS,CACZG,gBAAgB,KAjDD,EAqDnBE,cAAgB,WACd,IAAMC,EAAU,EAAKX,MAAMY,UAE3B,EAAKP,SAAS,CACZO,UAAU,GAAD,OAAKC,KAAKC,YAGrB,kBAAMhB,QAAQC,IAAR,qCAA0CY,EAA1C,eAAwD,EAAKX,MAAMY,gBA1DzE,EAAKZ,MAAQ,CACXC,KAAM,IAAIK,KACVE,gBAAgB,EAChBI,UAAW,SALI,E,qDASnB,WACEG,KAAKpB,e,kCAGP,WACEoB,KAAKZ,c,oBAiDP,WACE,OACE,oCACE,yBAAKa,UAAU,OACb,2CACA,2CAEG,IACAD,KAAKf,MAAMQ,gBAAkBO,KAAKf,MAAMC,KAAKC,sBAEhD,6BACE,4BAAQe,QAASF,KAAKR,UAAWW,KAAK,UAAtC,cAIA,4BAAQD,QAASF,KAAKN,UAAWS,KAAK,UAAtC,cAIA,4BAAQD,QAASF,KAAKL,cAAeQ,KAAK,UAA1C,0B,GArFMC,IAAMC,YCAxBC,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,U","file":"static/js/main.c5c8c8a2.chunk.js","sourcesContent":["import React from 'react';\n\nimport './App.scss';\n\nclass App extends React.Component {\n  timerID = null;\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      date: new Date(),\n      isClockVisible: true,\n      clockName: 'clock',\n    };\n  }\n\n  componentDidMount() {\n    this.startClock();\n  }\n\n  componentWillUnmount() {\n    this.stopClock();\n  }\n\n  startClock = () => {\n    if (this.timerID === null) {\n      this.timerID = setInterval(() => {\n        this.tick();\n\n        // eslint-disable-next-line\n        console.log(this.state.date.toLocaleTimeString());\n      }, 1000);\n    }\n  }\n\n  stopClock = () => {\n    clearInterval(this.timerID);\n    this.timerID = null;\n  }\n\n  tick = () => {\n    this.setState({\n      date: new Date(),\n    });\n  }\n\n  showClock = () => {\n    this.startClock();\n    this.setState({\n      isClockVisible: true,\n    });\n  }\n\n  hideClock = () => {\n    this.stopClock();\n    this.setState({\n      isClockVisible: false,\n    });\n  }\n\n  setRandomName = () => {\n    const oldName = this.state.clockName;\n\n    this.setState({\n      clockName: `${Math.random()}`,\n    },\n    // eslint-disable-next-line\n    () => console.log(`The Clock was renamed from ${oldName} to ${this.state.clockName}`));\n  }\n\n  render() {\n    return (\n      <>\n        <div className=\"App\">\n          <h1>React clock</h1>\n          <p>\n            Current time:\n            {' '}\n            {this.state.isClockVisible && this.state.date.toLocaleTimeString()}\n          </p>\n          <div>\n            <button onClick={this.showClock} type=\"button\">\n              Show Clock\n            </button>\n\n            <button onClick={this.hideClock} type=\"button\">\n              Hide Clock\n            </button>\n\n            <button onClick={this.setRandomName} type=\"button\">\n              Set random name\n            </button>\n          </div>\n        </div>\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}